>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 6, in integer_validator
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 8, in integer_validator
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 8, in integer_validator
ValueError: distance must be greater than 0
>>> b = BaseGeometry()
>>> b.area
<bound method BaseGeometry.area of <__main__.BaseGeometry object at 0x7f1c5dc8fdf0>>
>>> b.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in area
Exception: area() is not implemented
>>> b.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
SyntaxError: invalid character in identifier
>>> b.integer_validator(“age”)
  File "<stdin>", line 1
    b.integer_validator(“age”)
                            ^
SyntaxError: invalid character in identifier
