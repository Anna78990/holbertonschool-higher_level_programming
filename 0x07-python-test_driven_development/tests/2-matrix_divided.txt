>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[3]]

>>> print(matrix_divided(matrix, float('inf')))
[[0.0]]

>>> print(matrix_divided())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [[1, 2, 3],[4, 5, 6]]

>>> print(matrix_divided(matrix))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 22, in matrix_divided
ZeroDivisionError: division by zero

>>> matrix =  [[3, 9], [12, 15, 3]]

>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 18, in matrix_divided
TypeError: Each row of the matrix must have the same size

>>> matrix =  [[3, 9], [12, 15, 3]]

>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 18, in matrix_divided
TypeError: Each row of the matrix must have the same size

>>> matrix =  [[3, '9'], [15, 3]]

>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 11, in matrix_divided
TypeError: matrix must be a matrix (list of lists) of integers/floats
